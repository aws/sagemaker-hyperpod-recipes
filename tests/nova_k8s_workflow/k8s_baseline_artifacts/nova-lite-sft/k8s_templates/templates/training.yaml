{{ $config := .Values.trainingConfig }}
apiVersion: kubeflow.org/v1
kind: PyTorchJob
metadata:
  name: {{ $config.jobName }}
  namespace: {{ $config.namespace }}
  {{- if $config.annotations }}
  annotations:
    {{- range $key, $value := $config.annotations }}
    {{ $key | quote }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
  labels:
    app: {{ $config.jobName }}
    {{- if $config.customLabels }}
    {{- range $key, $value := $config.customLabels }}
    {{ $key | quote }}: {{ $value | quote }}
    {{- end}}
    {{- end }}
spec:
  {{- if $config.cleanPodPolicy }}
  runPolicy:
    cleanPodPolicy: {{ $config.cleanPodPolicy }}
  {{- end }}
  pytorchReplicaSpecs:
    Master:
      replicas: {{ $config.master_nodes }}
      restartPolicy: {{ $config.restartPolicy }}
      template:
        {{- if $config.customLabels }}
        metadata:
          labels:
            {{- range $key, $value := $config.customLabels }}
            {{ $key | quote }}: {{ $value | quote }}
            {{- end }}
        {{- end }}
        spec:
          tolerations:
            - key: "sagemaker.amazonaws.com/RestrictedNode"
              operator: "Equal"
              value: "Worker"
              effect: "NoSchedule"
          {{- if $config.priorityClassName }}
          priorityClassName: {{ $config.priorityClassName }}
          {{- end}}
          {{- if $config.serviceAccountName }}
          serviceAccountName: {{ $config.serviceAccountName }}
          {{- end }}
          {{- if $config.initContainer }}
          initContainers:
            - name: {{ $config.initContainer.name }}
              image: {{ $config.initContainer.image }}
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              volumeMounts:
              - name: fsx-path-init
                mountPath: /sagemaker/fsx/init
              - mountPath: /config
                name: training-config
              - mountPath: /var/log/aws/clusters
                name: logs
          {{- end }}
          containers:
          - name: pytorch
            image: {{ .Values.image.trainingImage }}
            env:
              {{- range $key, $value := $config.envVars }}
              - name: {{ $key }}
                value: {{ $value | quote }}
              {{- end}}
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            resources:
              limits:
                nvidia.com/gpu: {{ $config.devices }}
                vpc.amazonaws.com/efa: {{ $config.numEFADevices }}
              requests:
                nvidia.com/gpu: {{ $config.devices }}
                vpc.amazonaws.com/efa: {{ $config.numEFADevices }}
            securityContext:
              capabilities:
                add: [ "IPC_LOCK" ]
            volumeMounts:
            - name: fsx-path-main
              mountPath: /sagemaker/fsx/main
            - mountPath: /config
              name: training-config
            - mountPath: /dev/shm
              name: dshm
            - mountPath: /var/log/aws/clusters
              name: logs
            - mountPath: /sagemaker/fsx/output_artifacts
              name: fsx-path-output-artifacts
            - name: tmp-storage
              mountPath: /tmp
          {{- if (or $config.labelSelector.required $config.labelSelector.preferred) }}
          affinity:
            nodeAffinity:
            {{- if $config.labelSelector.required }}
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                    {{- range $key, $values := $config.labelSelector.required }}
                    - key: {{ $key | quote }}
                      operator: In
                      values:
                        {{- range $values }}
                        - {{ . | quote }}
                        {{- end}}
                    {{- end }}
            {{- end }}

            {{- if $config.labelSelector.preferred }}
              {{- $index := 0 }}
              preferredDuringSchedulingIgnoredDuringExecution:
                {{- range $key, $values := $config.labelSelector.preferred }}
                - weight: {{ index $config.labelSelector.weights $index }}
                  preference:
                    matchExpressions:
                      - key: {{ $key | quote }}
                        operator: In
                        values:
                          {{- range $values }}
                          - {{ . | quote }}
                          {{- end }}
                {{- $index = add $index 1 }}
                {{- end }}
            {{- end }}
          {{- end }}
          volumes:
            - name: fsx-path-main
              hostPath:
                path: /sagemaker/fsx/main
                type: DirectoryOrCreate
            - name: fsx-path-init
              hostPath:
                path: /sagemaker/fsx/init
                type: DirectoryOrCreate
            - configMap:
                name: training-config-{{ $config.jobName }}
              name: training-config
            - name: dshm
              emptyDir:
                medium: Memory
            - name: logs
              hostPath:
                path: /var/log/aws/clusters
                type: DirectoryOrCreate
            - name: fsx-path-output-artifacts
              hostPath:
                path: /sagemaker/fsx/output_artifacts
                type: DirectoryOrCreate
            - name: tmp-storage
              hostPath:
                path: /opt/dlami/nvme
                type: Directory
    {{- if gt (int (default 0 $config.worker_nodes)) 0 }}
    Worker:
      replicas: {{ $config.worker_nodes }}
      restartPolicy: {{ $config.restartPolicy }}
      template:
        {{- if $config.customLabels }}
        metadata:
          labels:
            {{- range $key, $value := $config.customLabels }}
            {{ $key | quote }}: {{ $value | quote }}
            {{- end }}
        {{- end }}
        spec:
          tolerations:
            - key: "sagemaker.amazonaws.com/RestrictedNode"
              operator: "Equal"
              value: "Worker"
              effect: "NoSchedule"
          {{- if $config.priorityClassName }}
          priorityClassName: {{ $config.priorityClassName }}
          {{- end}}
          {{- if $config.serviceAccountName }}
          serviceAccountName: {{ $config.serviceAccountName }}
          {{- end }}
          {{- if $config.initContainer }}
          initContainers:
            - name: {{ $config.initContainer.name }}
              image: {{ $config.initContainer.image }}
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              volumeMounts:
              - name: fsx-path-init
                mountPath: /sagemaker/fsx/init
              - mountPath: /config
                name: training-config
              - mountPath: /var/log/aws/clusters
                name: logs
          {{- end }}
          containers:
          - name: pytorch
            image: {{ .Values.image.trainingImage }}
            env:
              {{- range $key, $value := $config.envVars }}
              - name: {{ $key }}
                value: {{ $value | quote }}
              {{- end}}
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            resources:
              limits:
                nvidia.com/gpu: {{ $config.devices }}
                vpc.amazonaws.com/efa: {{ $config.numEFADevices }}
              requests:
                nvidia.com/gpu: {{ $config.devices }}
                vpc.amazonaws.com/efa: {{ $config.numEFADevices }}
            securityContext:
              capabilities:
                add: [ "IPC_LOCK" ]
            volumeMounts:
            - name: fsx-path-main
              mountPath: /sagemaker/fsx/main
            - mountPath: /config
              name: training-config
            - mountPath: /dev/shm
              name: dshm
            - mountPath: /var/log/aws/clusters
              name: logs
            - mountPath: /sagemaker/fsx/output_artifacts
              name: fsx-path-output-artifacts
            - name: tmp-storage
              mountPath: /tmp
          {{- if (or $config.labelSelector.required $config.labelSelector.preferred) }}
          affinity:
            nodeAffinity:
            {{- if $config.labelSelector.required }}
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                    {{- range $key, $values := $config.labelSelector.required }}
                    - key: {{ $key | quote }}
                      operator: In
                      values:
                        {{- range $values }}
                        - {{ . | quote }}
                        {{- end}}
                    {{- end }}
            {{- end }}

            {{- if $config.labelSelector.preferred }}
              {{- $index := 0 }}
              preferredDuringSchedulingIgnoredDuringExecution:
                {{- range $key, $values := $config.labelSelector.preferred }}
                - weight: {{ index $config.labelSelector.weights $index }}
                  preference:
                    matchExpressions:
                      - key: {{ $key | quote }}
                        operator: In
                        values:
                          {{- range $values }}
                          - {{ . | quote }}
                          {{- end }}
                {{- $index = add $index 1 }}
                {{- end }}
            {{- end }}
          {{- end }}
          volumes:
            - name: fsx-path-main
              hostPath:
                path: /sagemaker/fsx/main
                type: DirectoryOrCreate
            - name: fsx-path-init
              hostPath:
                path: /sagemaker/fsx/init
                type: DirectoryOrCreate
            - configMap:
                name: training-config-{{ $config.jobName }}
              name: training-config
            - name: dshm
              emptyDir:
                medium: Memory
            - name: logs
              hostPath:
                path: /var/log/aws/clusters
                type: DirectoryOrCreate
            - name: fsx-path-output-artifacts
              hostPath:
                path: /sagemaker/fsx/output_artifacts
                type: DirectoryOrCreate
            - name: tmp-storage
              hostPath:
                path: /opt/dlami/nvme
                type: Directory
    {{- end }}
